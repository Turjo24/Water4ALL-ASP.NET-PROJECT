<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - MedShare</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6',
                        secondary: '#10B981'
                    }
                }
            }
        }
    </script>
    <style>
        /* Hide scrollbar but allow scrolling */
        html, body {
            scrollbar-width: none; /* Firefox */
            -ms-overflow-style: none; /* IE 10+ */
        }

            html::-webkit-scrollbar,
            body::-webkit-scrollbar {
                display: none; /* Chrome, Safari, Opera */
            }
    </style>
</head>
<body class="bg-gradient-to-br from-green-50 to-blue-50 min-h-screen">
    <div class="flex min-h-screen">

        <!-- LEFT SIDE -->
        <div class="relative hidden w-1/2 items-center justify-center lg:flex">
            <!-- Background image -->
            <img src="/images/waterDrop.png" alt="background" class="absolute inset-0 h-full w-full object-contain p-10 opacity-30" />

            <!-- Content -->
            <div class="relative z-10 space-y-8 px-12 text-center">
                <h1 class="text-4xl font-bold text-blue-700">Join Us. Make a Difference.</h1>
                <div class="space-y-4 text-base">
                    <div>
                        <h2 class="font-semibold">Sign Up to Request Clean Water and Purification Kits</h2>
                        <p>Your journey towards providing clean water and solutions starts with a simple sign-up.</p>
                    </div>
                    <div>
                        <h2 class="font-semibold">Create Your Account and Get Started</h2>
                        <p>Sign up to manage your requests and start making an impact in your community today.</p>
                    </div>
                    <div>
                        <h2 class="font-semibold">Sign Up to Empower Your Community with Clean Water</h2>
                        <p>Create an account and begin requesting water solutions for areas in need.</p>
                    </div>
                    <div>
                        <h2 class="font-semibold">Start Making a Difference Today – Sign Up</h2>
                        <p>Register to access your account, track water distribution, and contribute to a healthier future.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Section (Register Form) -->
        <div class="flex w-full items-center justify-center px-4 py-12 sm:px-6 lg:w-1/2 lg:px-8">
            <div class="w-full max-w-md space-y-2">
                <!-- Logo and Header -->
                <div class="text-center">
                    <div class="mx-auto mb-1 flex h-12 w-12 items-center justify-center rounded-lg bg-gradient-to-r from-green-500 to-blue-500">
                        <svg class="h-8 w-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
                        </svg>
                    </div>
                    <h2 class="text-3xl font-bold text-gray-900">Water4All</h2>
                    <p class="text-sm text-gray-600">Create your account to get started</p>
                </div>

                <!-- Form Card -->
                <div class="rounded-xl bg-white p-8 shadow-lg">
                    <form id="registerForm" class="space-y-2">
                        <!-- Name -->
                        <div>
                            <label for="name" class="mb-2 block text-sm font-medium text-gray-700">Full Name</label>
                            <input id="name" name="name" type="text" required placeholder="Enter your full name"
                                   class="w-full border-0 border-b-2 border-gray-300 px-4 py-2 placeholder-gray-400 transition duration-300 focus:border-blue-500 focus:outline-none focus:ring-0" />
                        </div>

                        <!-- Email -->
                        <div>
                            <label for="email" class="mb-2 block text-sm font-medium text-gray-700">Email Address</label>
                            <input id="email" name="email" type="email" required placeholder="Enter your email"
                                   class="w-full border-0 border-b-2 border-gray-300 px-4 py-2 placeholder-gray-400 transition duration-300 focus:border-blue-500 focus:outline-none focus:ring-0" />
                        </div>

                        <!-- Role -->
                        <div>
                            <label for="role" class="mb-2 block text-sm font-medium text-gray-700">Role</label>
                            <select id="role" name="role" required
                                    class="w-full border-0 border-b-2 border-gray-300 px-4 py-2 placeholder-gray-400 transition duration-300 focus:border-blue-500 focus:outline-none focus:ring-0">
                                <option value="">Select your role</option>
                                <option value="User">User (General Public)</option>
                                <option value="Volunteer">Volunteer</option>
                                <option value="Admin">Admin</option>
                            </select>
                        </div>

                        <!-- Password -->
                        <div>
                            <label for="password" class="mb-2 block text-sm font-medium text-gray-700">Password</label>
                            <div class="relative">
                                <input id="password" name="password" type="password" required minlength="6"
                                       placeholder="Create a strong password"
                                       class="w-full border-0 border-b-2 border-gray-300 px-4 py-2 placeholder-gray-400 transition duration-300 focus:border-blue-500 focus:outline-none focus:ring-0" />
                                <button type="button" id="togglePassword"
                                        class="absolute inset-y-0 right-0 flex items-center pr-3">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor"
                                         viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                    </svg>
                                </button>
                            </div>
                            <p class="mt-1 text-xs text-gray-500">Password must be at least 6 characters long</p>
                        </div>

                        <!-- Confirm Password -->
                        <div>
                            <label for="confirmPassword" class="mb-2 block text-sm font-medium text-gray-700">Confirm Password</label>
                            <div class="relative">
                                <input id="confirmPassword" name="confirmPassword" type="password" required
                                       placeholder="Confirm your password"
                                       class="w-full border-0 border-b-2 border-gray-300 px-4 py-2 placeholder-gray-400 transition duration-300 focus:border-blue-500 focus:outline-none focus:ring-0" />
                                <button type="button" id="toggleConfirmPassword"
                                        class="absolute inset-y-0 right-0 flex items-center pr-3">
                                    <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor"
                                         viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                              d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <!-- Terms -->
                        <div class="flex items-center">
                            <input id="terms" name="terms" type="checkbox" required
                                   class="text-secondary h-4 w-4 rounded border-gray-300 focus:ring-secondary" />
                            <label for="terms" class="ml-2 block text-sm text-gray-700">
                                I agree to the
                                <a href="#" class="text-secondary underline hover:text-green-700">Terms and Conditions</a>
                            </label>
                        </div>

                        <!-- Submit -->
                        <button type="submit" id="registerBtn"
                                class="w-full rounded-lg bg-gradient-to-r from-green-500 to-blue-500 px-4 py-3 font-medium text-white transition-all duration-200 hover:from-green-600 hover:to-blue-600 focus:ring-secondary focus:outline-none focus:ring-2 focus:ring-offset-2">
                            <span id="registerBtnText">Create Account</span>
                            <div id="registerSpinner"
                                 class="ml-2 inline-block hidden h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent"></div>
                        </button>
                    </form>

                    <!-- Messages -->
                    <div id="errorMessage" class="mt-4 hidden rounded-lg border border-red-400 bg-red-100 p-3 text-red-700"></div>
                    <div id="successMessage" class="mt-4 hidden rounded-lg border border-green-400 bg-green-100 p-3 text-green-700"></div>

                    <!-- Link to Sign In -->
                    <div class="mt-6 text-center">
                        <p class="text-sm text-gray-600">
                            Already have an account?
                            <a href="SignIn" class="text-secondary font-medium transition-colors hover:text-green-700">Sign in here</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const registerForm = document.getElementById('registerForm');
            const registerBtn = document.getElementById('registerBtn');
            const registerBtnText = document.getElementById('registerBtnText');
            const registerSpinner = document.getElementById('registerSpinner');
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            const togglePassword = document.getElementById('togglePassword');
            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const passwordField = document.getElementById('password');
            const confirmPasswordField = document.getElementById('confirmPassword');

            // Toggle password visibility
            togglePassword.addEventListener('click', function() {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);
            });

            toggleConfirmPassword.addEventListener('click', function() {
                const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
                confirmPasswordField.setAttribute('type', type);
            });

            // Real-time password confirmation validation
            confirmPasswordField.addEventListener('input', function() {
                const password = passwordField.value;
                const confirmPassword = confirmPasswordField.value;
                
                if (confirmPassword && password !== confirmPassword) {
                    confirmPasswordField.classList.add('border-red-500');
                    confirmPasswordField.classList.remove('border-gray-300');
                } else {
                    confirmPasswordField.classList.remove('border-red-500');
                    confirmPasswordField.classList.add('border-gray-300');
                }
            });

            // Handle form submission
            registerForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const name = document.getElementById('name').value;
                const email = document.getElementById('email').value;
                const role = document.getElementById('role').value;
                const password = document.getElementById('password').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                // Validate passwords match
                if (password !== confirmPassword) {
                    errorMessage.textContent = 'Passwords do not match';
                    errorMessage.classList.remove('hidden');
                    return;
                }

                // Show loading state
                registerBtn.disabled = true;
                registerBtnText.textContent = 'Creating Account...';
                registerSpinner.classList.remove('hidden');
                errorMessage.classList.add('hidden');
                successMessage.classList.add('hidden');

                try {
                    const response = await fetch('/api/AuthApi/Register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            name: name,
                            email: email,
                            role: role,
                            password: password
                        })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        successMessage.textContent = 'Account created successfully! Redirecting to login...';
                        successMessage.classList.remove('hidden');

                        // Clear form
                        registerForm.reset();

                        // Redirect to login page
                        setTimeout(() => {
                            window.location.href = '/auth/signin';
                        }, 2000);
                    } else {
                        let errorText = 'Registration failed';
                        if (typeof data === 'string') {
                            errorText = data;
                        } else if (data.message) {
                            errorText = data.message;
                        } else if (data.errors && Array.isArray(data.errors)) {
                            errorText = data.errors.map(e => e.description || e).join(', ');
                        }
                        throw new Error(errorText);
                    }
                } catch (error) {
                    errorMessage.textContent = error.message || 'An error occurred during registration';
                    errorMessage.classList.remove('hidden');
                } finally {
                    // Reset loading state
                    registerBtn.disabled = false;
                    registerBtnText.textContent = 'Create Account';
                    registerSpinner.classList.add('hidden');
                }
            });
        });
    </script>
</body>
</html>