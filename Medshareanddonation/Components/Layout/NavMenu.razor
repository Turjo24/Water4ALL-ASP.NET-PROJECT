<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Navbar - MedShare</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#3B82F6',
                        secondary: '#10B981',
                    },
                },
            },
        };
        const GET_CART_URL = 'https://localhost:7217/CartMVC/GetCart';
    </script>
</head>
<body class="bg-gray-100">

    <nav class="flex-shrink-0 bg-white text-black shadow-md">
        <div class="px-4 sm:px-10">
            <div class="flex h-16 items-center justify-between">
                <div class="flex items-center space-x-6">
                    <a href="/" class="text-xl font-semibold transition-colors hover:text-gray-600">MyApp</a>
                    <div class="hidden md:flex space-x-4">
                        <a href="/" class="rounded-md px-3 py-2 text-sm font-medium transition-colors hover:text-gray-500">Home</a>
                        <a href="/about" class="rounded-md px-3 py-2 text-sm font-medium transition-colors hover:text-gray-500">About</a>
                        <a href="/contact" class="rounded-md px-3 py-2 text-sm font-medium transition-colors hover:text-gray-500">Contact</a>
                        <a href="/Document/Index" class="rounded-md px-3 py-2 text-sm font-medium transition-colors hover:text-gray-500">Document</a>
                    </div>
                </div>
                <div id="navRightActions" class="relative"></div>
            </div>
        </div>
    </nav>

    <script>
        const navRight = document.getElementById('navRightActions');
        const token = localStorage.getItem('token');
        const role = localStorage.getItem('userRole');

        // Track cart count
        let cartCount = parseInt(localStorage.getItem('cartCount')) || 0;

        // Update cart count in navbar
        function updateCartCount(items = null) {
            if (!token || role !== 'User') return;

            if (items) {
                cartCount = items.reduce((sum, item) => sum + item.quantity, 0);
            }

            const cartBadge = document.getElementById('cartCount');
            if (cartBadge) cartBadge.textContent = cartCount;

            localStorage.setItem('cartCount', cartCount);
        }

        // Fetch latest cart count from server
        function fetchCartCount() {
            if (!token || role !== 'User') return;

            fetch(GET_CART_URL, { headers: { 'Authorization': `Bearer ${token}` } })
                .then(res => res.json())
                .then(data => updateCartCount(data.items))
                .catch(() => {});
        }

        // Add item to cart dynamically
        async function addToCart(productId) {
            if (!token || role !== 'User') {
                alert('Please log in to add items to cart.');
                return;
            }

            try {
                const res = await fetch('https://localhost:7217/CartMVC/Add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
                    body: JSON.stringify({ productId })
                });

                if (res.ok) {
                    fetchCartCount(); // update count from server
                    localStorage.setItem('cartUpdated', Date.now()); // sync other tabs
                } else {
                    const err = await res.json().catch(() => ({ message: 'Failed to add item' }));
                    alert(err.message || 'Failed to add item');
                }
            } catch (error) {
                console.error(error);
                alert('Something went wrong while adding the item.');
            }
        }

        // Render navbar right side
        function renderNavRight() {
            if (!token) {
                navRight.innerHTML = `
                    <a href="/auth/signup" class="cursor-pointer rounded border border-gray-500 px-4 py-1 text-sm transition-colors hover:bg-gray-300">
                        Sign Up
                    </a>
                `;
                return;
            }

            let roleOptionsHTML = '';
            let cartHTML = '';

            if (role === 'Admin') {
                roleOptionsHTML = `
                    <a href="https://localhost:7217/DonationMVC/Allrequests" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">All Donation Requests</a>
                    <a href="https://localhost:7217/ProductMVC/create" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">Create Product</a>
                `;
            } else {
                roleOptionsHTML = `
                    <a href="https://localhost:7217/DonationMVC/create" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">Donation Request</a>
                    <a href="https://localhost:7217/DonationMVC/MyRequests" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">Donation Requested History</a>
                `;
                cartHTML = `
                    <a href="/CartMVC" class="relative text-blue-600 hover:text-blue-700 font-semibold">
                        <i class="fas fa-shopping-cart text-lg"></i>
                        <span id="cartCount" class="absolute -top-2 -right-2 bg-red-600 text-white text-xs rounded-full px-1.5 py-0.5">${cartCount}</span>
                    </a>
                `;
            }

            navRight.innerHTML = `
                <div class="flex items-center space-x-4">
                    ${cartHTML}
                    <div class="relative group">
                        <button class="focus:outline-none" aria-label="User menu">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-700 cursor-pointer" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"
                                    d="M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z" />
                            </svg>
                        </button>

                        <div class="absolute right-0 z-50 mt-2 w-56 rounded-md border bg-white py-2 shadow-lg opacity-0 group-hover:opacity-100 group-hover:visible invisible transition-all duration-150">
                            ${roleOptionsHTML}
                            <hr class="my-1 border-gray-300">
                            <button id="dashboardBtn" class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">Dashboard</button>
                            <button id="logoutBtn" class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">Logout</button>
                        </div>
                    </div>
                </div>
            `;

            setTimeout(() => {
                document.getElementById('logoutBtn')?.addEventListener('click', () => {
                    localStorage.removeItem('token');
                    localStorage.removeItem('userId');
                    localStorage.removeItem('userName');
                    localStorage.removeItem('userRole');
                    localStorage.removeItem('cartCount');
                    window.location.href = '/auth/signin';
                });

                document.getElementById('dashboardBtn')?.addEventListener('click', () => {
                    window.location.href = '/Profile/UserProfile';
                });

                if (role === 'User') fetchCartCount();
            }, 0);
        }

        // Listen for cart updates from other tabs
        window.addEventListener('storage', (event) => {
            if (event.key === 'cartUpdated' && role === 'User') {
                fetchCartCount();
            }
        });

        // Initialize
        renderNavRight();
    </script>

</body>
</html>
