@{
    ViewData["Title"] = "Manage Products";
}

<h2>Admin Products</h2>

<!-- Add / Edit Product Form -->
<form id="addProductForm" enctype="multipart/form-data">
    <input type="hidden" id="productId" />
    <input type="text" id="Name" placeholder="Product Name" class="form-control mb-2" required />
    <textarea id="Description" placeholder="Description" class="form-control mb-2" required></textarea>
    <input type="number" id="Price" placeholder="Price" class="form-control mb-2" required />
    <select id="CategoryId" class="form-control mb-2" required>
        <!-- Categories will be loaded dynamically -->
    </select>
    <input type="file" id="ImageFile" class="form-control mb-2" />
    <button type="submit" class="btn btn-success">Save Product</button>
    <button type="button" class="btn btn-secondary" id="cancelEdit" style="display:none;">Cancel Edit</button>
</form>

<hr>

<!-- Products Table -->
<table class="table table-bordered" id="productsTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Category</th>
            <th>Image</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section Scripts {
    <script>
        const apiUrl = "https://localhost:7217/api/ProductsApi";
        const token = localStorage.getItem("token");

        async function loadCategories() {
            try {
                const response = await fetch("https://localhost:7217/api/categories", {
                    headers: { "Authorization": `Bearer ${token}` }
                });
                const categories = await response.json();
                const select = document.getElementById("CategoryId");
                select.innerHTML = "";
                categories.forEach(c => {
                    const option = document.createElement("option");
                    option.value = c.id;
                    option.textContent = c.name;
                    select.appendChild(option);
                });
            } catch (err) {
                console.error(err);
                alert("Error loading categories");
            }
        }

        async function loadProducts() {
            try {
                const response = await fetch(apiUrl, {
                    headers: { "Authorization": `Bearer ${token}` }
                });
                const products = await response.json();
                const tbody = document.querySelector("#productsTable tbody");
                tbody.innerHTML = "";

                products.forEach(p => {
                    const tr = document.createElement("tr");
                    tr.innerHTML = `
                        <td>${p.name}</td>
                        <td>${p.description}</td>
                        <td>${p.price}</td>
                        <td>${p.category}</td>
                        <td>${p.imageUrl ? `<img src="${p.imageUrl}" width="50"/>` : ''}</td>
                        <td>
                            <button class="btn btn-primary btn-sm" onclick="editProduct(${p.id})">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteProduct(${p.id})">Delete</button>
                        </td>
                    `;
                    tbody.appendChild(tr);
                });
            } catch (err) {
                console.error(err);
                alert("Error loading products");
            }
        }

        async function saveProduct(event) {
            event.preventDefault();
            const formData = new FormData();
            formData.append("Name", document.getElementById("Name").value);
            formData.append("Description", document.getElementById("Description").value);
            formData.append("Price", document.getElementById("Price").value);
            formData.append("CategoryId", document.getElementById("CategoryId").value);
            const file = document.getElementById("ImageFile").files[0];
            if (file) formData.append("image", file);

            const productId = document.getElementById("productId").value;
            const method = productId ? "PUT" : "POST";
            const url = productId ? `${apiUrl}/${productId}` : apiUrl;

            try {
                const response = await fetch(url, {
                    method,
                    headers: { "Authorization": `Bearer ${token}` },
                    body: formData
                });
                if (!response.ok) throw new Error("Failed to save product");
                alert(productId ? "Product updated!" : "Product added!");
                resetForm();
                loadProducts();
            } catch (err) {
                console.error(err);
                alert("Error saving product");
            }
        }

        async function deleteProduct(id) {
            if (!confirm("Are you sure?")) return;
            try {
                const response = await fetch(`${apiUrl}/${id}`, {
                    method: "DELETE",
                    headers: { "Authorization": `Bearer ${token}` }
                });
                if (!response.ok) throw new Error("Failed to delete");
                loadProducts();
            } catch (err) {
                console.error(err);
                alert("Error deleting product");
            }
        }

        async function editProduct(id) {
            try {
                const response = await fetch(`${apiUrl}/${id}`, {
                    headers: { "Authorization": `Bearer ${token}` }
                });
                const p = await response.json();
                document.getElementById("productId").value = p.id;
                document.getElementById("Name").value = p.name;
                document.getElementById("Description").value = p.description;
                document.getElementById("Price").value = p.price;
                document.getElementById("CategoryId").value = p.categoryId;
                document.getElementById("cancelEdit").style.display = "inline-block";
            } catch (err) {
                console.error(err);
                alert("Error fetching product details");
            }
        }

        function resetForm() {
            document.getElementById("addProductForm").reset();
            document.getElementById("productId").value = "";
            document.getElementById("cancelEdit").style.display = "none";
        }

        document.getElementById("cancelEdit").addEventListener("click", resetForm);
        document.getElementById("addProductForm").addEventListener("submit", saveProduct);

        loadCategories();
        loadProducts();
    </script>
}
