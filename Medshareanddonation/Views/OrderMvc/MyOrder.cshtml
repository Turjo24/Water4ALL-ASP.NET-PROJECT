@{
    ViewData["Title"] = "My Orders";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }

        keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .card-hover:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .status-pending {
            background-color: #fef3c7;
            color: #b45309;
        }

        .status-completed {
            background-color: #d1fae5;
            color: #065f46;
        }

        .status-cancelled {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .table-hover tr:hover {
            background-color: #f8fafc;
            transition: background-color 0.2s ease;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-900 min-h-screen">

    <!-- Main Content -->
    <main class="max-w-5xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <h1 class="text-4xl font-bold text-gray-900 mb-8">My Orders</h1>

        <div id="loading" class="flex items-center justify-center text-gray-600 mb-6">
            <i class="fas fa-spinner fa-spin mr-2"></i>Loading your orders...
        </div>
        <div id="error" class="hidden text-red-600 bg-red-50 p-4 rounded-lg mb-6"></div>

        <div id="ordersContainer" class="space-y-6"></div>
    </main>

    <!-- JavaScript -->
    <script>
        async function fetchMyOrders() {
            try {
                const token = localStorage.getItem("token");
                if (!token) {
                    document.getElementById("loading").classList.add("hidden");
                    const errorEl = document.getElementById("error");
                    errorEl.textContent = "Authentication required. Please log in.";
                    errorEl.classList.remove("hidden");
                    return;
                }

                const response = await fetch("/api/OrdersApi/MyOrders", {
                    headers: {
                        "Authorization": `Bearer ${token}`,
                        "Content-Type": "application/json"
                    }
                });

                if (!response.ok) throw new Error("Failed to fetch orders.");

                const orders = await response.json();
                document.getElementById("loading").classList.add("hidden");
                renderMyOrders(orders);
            } catch (err) {
                document.getElementById("loading").classList.add("hidden");
                const errorEl = document.getElementById("error");
                errorEl.textContent = err.message || "An error occurred while fetching your orders.";
                errorEl.classList.remove("hidden");
            }
        }

        function renderMyOrders(orders) {
            const container = document.getElementById("ordersContainer");
            container.innerHTML = "";

            if (orders.length === 0) {
                container.innerHTML = `
                    <div class="bg-white p-6 rounded-lg shadow-lg text-center">
                        <p class="text-gray-600">No orders found.</p>
                    </div>
                `;
                return;
            }

            orders.forEach(order => {
                const statusClass = {
                    'Pending': 'status-pending',
                    'Completed': 'status-completed',
                    'Cancelled': 'status-cancelled'
                }[order.status] || '';

                const card = document.createElement("div");
                card.className = "bg-white shadow-lg rounded-xl p-6 card-hover fade-in";
                card.innerHTML = `
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold text-gray-900">
                            <a href="/OrderDetails/${order.id}" class="hover:text-blue-600 transition-colors">Order #${order.id}</a>
                        </h2>
                        <span class="status-badge ${statusClass}">${order.status}</span>
                    </div>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6">
                        <p><strong>Date:</strong> ${new Date(order.orderDate).toLocaleString('en-US', { dateStyle: 'medium', timeStyle: 'short' })}</p>
                        <p><strong>Total:</strong> ৳${(order.totalAmount ?? 0).toFixed(2)}</p>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900 mb-3">Order Items</h3>
                        <div class="overflow-x-auto">
                            <table class="w-full text-sm border border-gray-200 rounded-lg table-hover">
                                <thead class="bg-gray-50 text-gray-700">
                                    <tr>
                                        <th class="border px-4 py-3 text-left font-semibold">Product</th>
                                        <th class="border px-4 py-3 text-center font-semibold">Quantity</th>
                                        <th class="border px-4 py-3 text-center font-semibold">Unit Price</th>
                                        <th class="border px-4 py-3 text-center font-semibold">Total</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white">
                                    ${order.items.map(item => `
                                        <tr class="border-t border-gray-200">
                                            <td class="px-4 py-3">${item.productName} <span class="text-gray-500 text-xs">(ID: ${item.productId})</span></td>
                                            <td class="text-center px-4 py-3">${item.quantity}</td>
                                            <td class="text-center px-4 py-3">৳${item.unitPrice.toFixed(2)}</td>
                                            <td class="text-center px-4 py-3">৳${item.totalPrice.toFixed(2)}</td>
                                        </tr>
                                    `).join("")}
                                </tbody>
                            </table>
                        </div>
                    </div>
                `;
                container.appendChild(card);
            });
        }

        document.addEventListener("DOMContentLoaded", fetchMyOrders);
    </script>
</body>
</html>
