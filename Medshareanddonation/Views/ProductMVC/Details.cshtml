<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details - Medshare & Donation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 min-h-screen">

    <!-- Loading State -->
    <div id="loadingState" class="flex justify-center items-center min-h-screen">
        <div class="text-center">
            <div class="animate-spin rounded-full h-16 w-16 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p class="text-gray-600 text-lg">Loading product details...</p>
        </div>
    </div>

    <!-- Product Details -->
    <div id="productDetails" class="hidden">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center space-x-4">
                        <a href="/All" class="text-gray-600 hover:text-blue-600 transition-colors">
                            <i class="fas fa-arrow-left mr-2"></i>Back to Products
                        </a>
                        <span class="text-gray-300">|</span>
                        <span class="text-gray-500">Product Details</span>
                    </div>
                    <!-- Admin indicator -->
                    <div id="adminIndicator" class="hidden">
                        <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-semibold">
                            <i class="fas fa-crown mr-1"></i>Admin View
                        </span>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="bg-white rounded-2xl shadow-xl overflow-hidden">
                <div class="lg:grid lg:grid-cols-2 lg:gap-8">
                    <!-- Product Image -->
                    <div class="relative">
                        <div class="aspect-square lg:aspect-auto lg:h-full bg-gray-100 flex items-center justify-center overflow-hidden">
                            <img id="productImage"
                                 src=""
                                 alt="Product Image"
                                 class="w-full h-full object-contain hover:scale-105 transition-transform duration-500">
                        </div>
                        <div class="absolute top-6 left-6">
                            <span id="availabilityBadge" class="bg-green-500 text-white px-4 py-2 rounded-full text-sm font-semibold shadow-lg">
                                <i class="fas fa-check-circle mr-1"></i>Available
                            </span>
                        </div>
                    </div>

                    <!-- Product Information -->
                    <div class="p-8 lg:p-12 flex flex-col justify-between">
                        <div>
                            <!-- Category -->
                            <div class="mb-4">
                                <span id="productCategory" class="inline-block bg-blue-100 text-blue-800 px-4 py-2 rounded-full text-sm font-medium"></span>
                            </div>

                            <!-- Product Name -->
                            <h1 id="productName" class="text-4xl font-bold text-gray-900 mb-6 leading-tight"></h1>

                            <!-- Price -->
                            <div class="mb-8">
                                <div class="flex items-baseline space-x-2">
                                    <span id="productPrice" class="text-5xl font-bold text-blue-600"></span>
                                    <span class="text-xl text-gray-500">BDT</span>
                                </div>
                                <p class="text-gray-500 text-sm mt-2">Price includes all applicable taxes</p>
                            </div>

                            <!-- Description -->
                            <div class="mb-8">
                                <h3 class="text-xl font-semibold text-gray-900 mb-4">
                                    <i class="fas fa-info-circle mr-2 text-blue-600"></i>Product Description
                                </h3>
                                <p id="productDescription" class="text-gray-700 text-lg leading-relaxed bg-gray-50 p-6 rounded-xl"></p>
                            </div>

                            <!-- Product Features -->
                            <div class="mb-8">
                                <h3 class="text-xl font-semibold text-gray-900 mb-4">
                                    <i class="fas fa-star mr-2 text-yellow-500"></i>Key Features
                                </h3>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div class="flex items-center space-x-3 bg-green-50 p-4 rounded-lg">
                                        <i class="fas fa-shield-alt text-green-600"></i>
                                        <span class="text-green-800 font-medium">Quality Assured</span>
                                    </div>
                                    <div class="flex items-center space-x-3 bg-blue-50 p-4 rounded-lg">
                                        <i class="fas fa-shipping-fast text-blue-600"></i>
                                        <span class="text-blue-800 font-medium">Fast Delivery</span>
                                    </div>
                                    <div class="flex items-center space-x-3 bg-purple-50 p-4 rounded-lg">
                                        <i class="fas fa-certificate text-purple-600"></i>
                                        <span class="text-purple-800 font-medium">Certified Product</span>
                                    </div>
                                    <div class="flex items-center space-x-3 bg-orange-50 p-4 rounded-lg">
                                        <i class="fas fa-headset text-orange-600"></i>
                                        <span class="text-orange-800 font-medium">24/7 Support</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons - Different for Admin and Regular Users -->
                        <!-- Regular User Actions -->
                        <div id="regularUserActions" class="space-y-4">
                            <!-- Quantity Selector -->
                            <div class="flex items-center space-x-4 mb-6">
                                <label class="text-lg font-semibold text-gray-700">Quantity:</label>
                                <div class="flex items-center border border-gray-300 rounded-lg">
                                    <button id="decreaseQty" class="px-4 py-2 text-gray-600 hover:bg-gray-100 transition-colors">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                    <span id="quantity" class="px-6 py-2 bg-gray-50 border-l border-r border-gray-300 font-semibold">1</span>
                                    <button id="increaseQty" class="px-4 py-2 text-gray-600 hover:bg-gray-100 transition-colors">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Add to Cart Button -->
                            <button id="addToCartBtn"
                                    class="w-full bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white py-4 px-8 rounded-xl font-bold text-lg transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl">
                                <i class="fas fa-cart-plus mr-3"></i>Add to Cart
                            </button>

                            <!-- Additional Actions for Regular Users -->
                            <div class="grid grid-cols-2 gap-4">
                                <button class="bg-gray-100 hover:bg-gray-200 text-gray-800 py-3 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-lg">
                                    <i class="fas fa-heart mr-2"></i>Add to Wishlist
                                </button>
                                <button id="shareProductBtn" class="bg-blue-100 hover:bg-blue-200 text-blue-800 py-3 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-lg">
                                    <i class="fas fa-share-alt mr-2"></i>Share Product
                                </button>
                            </div>
                        </div>

                        <!-- Admin Actions -->
                        <div id="adminActions" class="hidden space-y-4">
                            <!-- Edit Product Button -->
                            <button id="editProductBtn"
                                    class="w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white py-4 px-8 rounded-xl font-bold text-lg transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl">
                                <i class="fas fa-edit mr-3"></i>Edit Product
                            </button>

                            <!-- Admin Share Button -->
                            <button id="adminShareProductBtn" class="w-full bg-blue-100 hover:bg-blue-200 text-blue-800 py-3 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-lg">
                                <i class="fas fa-share-alt mr-2"></i>Share Product
                            </button>

                            <!-- Admin Info Panel -->
                            <div class="bg-purple-50 border border-purple-200 rounded-lg p-4 mt-6">
                                <h4 class="font-semibold text-purple-800 mb-2">
                                    <i class="fas fa-info-circle mr-2"></i>Admin Information
                                </h4>
                                <div class="text-sm text-purple-700 space-y-1">
                                    <p><strong>Product ID:</strong> <span id="adminProductId"></span></p>
                                    <p><strong>Status:</strong> <span id="adminProductStatus"></span></p>
                                    <p><strong>Created:</strong> <span id="adminProductCreated">N/A</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Information Section -->
            <div class="mt-12 bg-white rounded-2xl shadow-lg p-8">
                <div class="grid lg:grid-cols-3 gap-8">
                    <!-- Delivery Information -->
                    <div class="text-center">
                        <div class="bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-truck text-2xl text-green-600"></i>
                        </div>
                        <h3 class="text-xl font-bold text-gray-900 mb-2">Free Delivery</h3>
                        <p class="text-gray-600">Free delivery for orders above ৳1000 within Dhaka</p>
                    </div>

                    <!-- Return Policy -->
                    <div class="text-center">
                        <div class="bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fa-solid fa-chart-simple text-2xl text-blue-600"></i>
                        </div>
                        <h3 class="text-xl font-bold text-gray-900 mb-2">Quality You Can Trust</h3>
                        <p class="text-gray-600">All products are carefully tested to meet the highest standards of water purification.</p>
                    </div>

                    <!-- Support -->
                    <div class="text-center">
                        <div class="bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-phone text-2xl text-purple-600"></i>
                        </div>
                        <h3 class="text-xl font-bold text-gray-900 mb-2">24/7 Support</h3>
                        <p class="text-gray-600">Round-the-clock customer support for all inquiries</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error State -->
    <div id="errorState" class="hidden min-h-screen flex items-center justify-center">
        <div class="text-center bg-white rounded-2xl shadow-xl p-12 max-w-md mx-4">
            <div class="w-20 h-20 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <i class="fas fa-exclamation-triangle text-3xl text-red-600"></i>
            </div>
            <h2 class="text-2xl font-bold text-gray-900 mb-4">Product Not Found</h2>
            <p class="text-gray-600 mb-8">The product you're looking for doesn't exist or has been removed.</p>
            <a href="/All"
               class="inline-block bg-blue-600 hover:bg-blue-700 text-white py-3 px-8 rounded-lg font-semibold transition-colors">
                <i class="fas fa-arrow-left mr-2"></i>Back to Products
            </a>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div id="editProductModal" class="hidden fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
        <div class="bg-white rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <!-- Modal Header -->
            <div class="bg-gradient-to-r from-purple-600 to-blue-600 px-8 py-6 flex justify-between items-center sticky top-0 z-10">
                <h2 class="text-2xl font-bold text-white">
                    <i class="fas fa-edit mr-3"></i>Edit Product
                </h2>
                <button id="closeEditModal" class="text-white hover:text-gray-200 transition-colors">
                    <i class="fas fa-times text-2xl"></i>
                </button>
            </div>

            <!-- Edit Form -->
            <form id="editProductForm" class="p-8 space-y-6" enctype="multipart/form-data">
                <!-- Product Name and Price Row -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="editProductName" class="block text-sm font-semibold text-gray-700 mb-2">
                            Product Name *
                        </label>
                        <input type="text"
                               id="editProductName"
                               name="Name"
                               required
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                               placeholder="Enter product name">
                    </div>

                    <div>
                        <label for="editProductPrice" class="block text-sm font-semibold text-gray-700 mb-2">
                            Price (৳) *
                        </label>
                        <input type="number"
                               id="editProductPrice"
                               name="Price"
                               step="0.01"
                               min="0"
                               required
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                               placeholder="0.00">
                    </div>
                </div>

                <!-- Category ID and Image Row -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="editProductCategory" class="block text-sm font-semibold text-gray-700 mb-2">
                            Category ID *
                        </label>
                        <input type="number"
                               id="editProductCategory"
                               name="CategoryId"
                               required
                               min="1"
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                               placeholder="Enter category ID">
                    </div>

                    <div>
                        <label for="editProductImage" class="block text-sm font-semibold text-gray-700 mb-2">
                            Product Image (leave empty to keep current)
                        </label>
                        <input type="file"
                               id="editProductImage"
                               name="ImageUrl"
                               accept="image/*"
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100">
                    </div>
                </div>

                <!-- Description -->
                <div>
                    <label for="editProductDescription" class="block text-sm font-semibold text-gray-700 mb-2">
                        Description *
                    </label>
                    <textarea id="editProductDescription"
                              name="Description"
                              required
                              rows="5"
                              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all resize-none"
                              placeholder="Enter detailed product description..."></textarea>
                </div>

                <!-- Active Status -->
                <div class="flex items-center space-x-3">
                    <input type="checkbox"
                           id="editProductActive"
                           name="IsActive"
                           class="h-5 w-5 text-purple-600 border-gray-300 rounded focus:ring-purple-500">
                    <label for="editProductActive" class="text-sm font-semibold text-gray-700">
                        Product is active and available
                    </label>
                </div>

                <!-- Current Image Preview -->
                <div id="currentImagePreview">
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Current Image</label>
                    <img id="currentImg" src="" alt="Current Product Image" class="max-w-xs h-48 object-cover rounded-lg border border-gray-300 shadow-md">
                </div>

                <!-- New Image Preview -->
                <div id="newImagePreview" class="hidden">
                    <label class="block text-sm font-semibold text-gray-700 mb-2">New Image Preview</label>
                    <img id="newPreviewImg" src="" alt="New Preview" class="max-w-xs h-48 object-cover rounded-lg border border-gray-300 shadow-md">
                </div>

                <!-- Submit Buttons -->
                <div class="flex flex-col sm:flex-row gap-4 pt-8 border-t border-gray-200">
                    <button type="submit"
                            id="updateBtn"
                            class="bg-purple-600 hover:bg-purple-700 text-white px-8 py-4 rounded-lg font-semibold transition-all transform hover:-translate-y-1 hover:shadow-lg">
                        <i class="fas fa-save mr-2"></i>
                        <span>Update Product</span>
                    </button>

                    <button type="button"
                            id="cancelEditBtn"
                            class="bg-gray-500 hover:bg-gray-600 text-white px-8 py-4 rounded-lg font-semibold transition-all">
                        <i class="fas fa-times mr-2"></i>Cancel
                    </button>

                    <button type="button"
                            onclick="resetEditForm()"
                            class="bg-yellow-500 hover:bg-yellow-600 text-white px-8 py-4 rounded-lg font-semibold transition-all">
                        <i class="fas fa-undo mr-2"></i>Reset
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Success Modal for Edit -->
    <div id="editSuccessModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-xl p-8 max-w-md mx-4 text-center shadow-2xl">
            <div class="text-green-500 text-6xl mb-6">
                <i class="fas fa-check-circle"></i>
            </div>
            <h3 class="text-2xl font-bold text-gray-900 mb-4">Updated Successfully!</h3>
            <p class="text-gray-600 mb-8">Product has been updated successfully.</p>
            <button onclick="hideEditSuccessModal()" class="w-full bg-purple-600 hover:bg-purple-700 text-white py-3 px-6 rounded-lg transition-colors font-semibold">
                <i class="fas fa-check mr-2"></i>Continue
            </button>
        </div>
    </div>

    <script>
        const BASE_URL = 'https://localhost:7217/api/ProductsApi';
        const CART_URL = '/CartMVC/AddToCart';
        let currentProduct = null;
        let quantity = 1;
        let isAdmin = false;

        // Get product ID from URL path
        function getProductIdFromUrl() {
            const path = window.location.pathname;
            const matches = path.match(/\/ProductMVC\/Details\/(\d+)/);
            return matches ? parseInt(matches[1]) : null;
        }

        const productId = getProductIdFromUrl();

        // Get authorization headers
        function getAuthHeaders() {
            const token = localStorage.getItem('token');
            return token ? { 'Authorization': `Bearer ${token}` } : {};
        }

        // Decode JWT token to get user role
        function getUserRoleFromToken() {
            const token = localStorage.getItem('token');
            if (!token) return null;

            try {
                // Decode JWT token (simple decode, not verification)
                const base64Url = token.split('.')[1];
                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
                const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
                }).join(''));

                const payload = JSON.parse(jsonPayload);
                return payload['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] ||
                       payload.role ||
                       payload['https://schemas.microsoft.com/ws/2008/06/identity/claims/role'];
            } catch (error) {
                console.error('Error decoding token:', error);
                return null;
            }
        }

        // Show different states
        function showLoading() {
            document.getElementById('loadingState').classList.remove('hidden');
            document.getElementById('productDetails').classList.add('hidden');
            document.getElementById('errorState').classList.add('hidden');
        }

        function showProductDetails() {
            document.getElementById('loadingState').classList.add('hidden');
            document.getElementById('productDetails').classList.remove('hidden');
            document.getElementById('errorState').classList.add('hidden');
        }

        function showError() {
            document.getElementById('loadingState').classList.add('hidden');
            document.getElementById('productDetails').classList.add('hidden');
            document.getElementById('errorState').classList.remove('hidden');
        }

        // Show appropriate UI based on user role
        function setupUIForUserRole() {
            const userRole = getUserRoleFromToken();
            isAdmin = userRole === 'Admin';

            if (isAdmin) {
                // Show admin UI
                document.getElementById('adminActions').classList.remove('hidden');
                document.getElementById('regularUserActions').classList.add('hidden');
                document.getElementById('adminIndicator').classList.remove('hidden');
            } else {
                // Show regular user UI
                document.getElementById('adminActions').classList.add('hidden');
                document.getElementById('regularUserActions').classList.remove('hidden');
                document.getElementById('adminIndicator').classList.add('hidden');
            }
        }

        // Load product details
        async function loadProductDetails() {
            if (!productId) {
                console.error('No product ID found in URL');
                showError();
                return;
            }

            showLoading();
            try {
                const response = await fetch(`${BASE_URL}/${productId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        ...getAuthHeaders()
                    }
                });

                if (response.ok) {
                    currentProduct = await response.json();
                    displayProductDetails(currentProduct);
                    setupUIForUserRole();
                    showProductDetails();
                } else if (response.status === 404) {
                    console.error('Product not found:', productId);
                    showError();
                } else {
                    console.error('Failed to load product:', response.status);
                    showError();
                }
            } catch (error) {
                console.error('Error loading product:', error);
                showError();
            }
        }

        // Display product details
        function displayProductDetails(product) {
            // Update page title
            document.title = `${product.name} - Medshare & Donation`;

            // Update product information
            document.getElementById('productImage').src = product.imageUrl || 'https://via.placeholder.com/600x600?text=Medical+Product';
            document.getElementById('productImage').alt = product.name;
            document.getElementById('productName').textContent = product.name;
            document.getElementById('productDescription').textContent = product.description || 'No description available';
            document.getElementById('productPrice').textContent = `৳${product.price}`;

            // Handle category display
            const categoryElement = document.getElementById('productCategory');
            if (product.category && product.category.name) {
                categoryElement.textContent = product.category.name;
                categoryElement.style.display = 'inline-block';
            } else {
                categoryElement.style.display = 'none';
            }

            // Update availability badge
            const availabilityBadge = document.getElementById('availabilityBadge');
            if (product.isActive) {
                availabilityBadge.innerHTML = '<i class="fas fa-check-circle mr-1"></i>Available';
                availabilityBadge.className = 'bg-green-500 text-white px-4 py-2 rounded-full text-sm font-semibold shadow-lg';
            } else {
                availabilityBadge.innerHTML = '<i class="fas fa-times-circle mr-1"></i>Out of Stock';
                availabilityBadge.className = 'bg-red-500 text-white px-4 py-2 rounded-full text-sm font-semibold shadow-lg';
            }

            // Update admin info panel if admin
            if (isAdmin) {
                document.getElementById('adminProductId').textContent = product.id;
                document.getElementById('adminProductStatus').textContent = product.isActive ? 'Active' : 'Inactive';
                // You can add created date if available in your model
            }
        }

        // Quantity management (for regular users only)
        function updateQuantity(newQuantity) {
            if (newQuantity < 1) return;
            quantity = newQuantity;
            document.getElementById('quantity').textContent = quantity;
        }

        // Add to cart functionality (for regular users only)
        async function addToCart() {
            if (!currentProduct) return;

            try {
                const response = await fetch(CART_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        ...getAuthHeaders(),
                    },
                    body: JSON.stringify({
                        productId: currentProduct.id,
                        quantity: quantity
                    })
                });

                 if (response.ok) {
            // Show success message with animation
            const addToCartBtn = document.getElementById('addToCartBtn');
            const originalText = addToCartBtn.innerHTML;
            addToCartBtn.innerHTML = '<i class="fas fa-check mr-3"></i>Added to Cart!';
            addToCartBtn.classList.remove('from-green-600', 'to-green-700', 'hover:from-green-700', 'hover:to-green-800');
            addToCartBtn.classList.add('bg-green-600');

            // Reset button text and classes after 2 seconds
            setTimeout(() => {
                addToCartBtn.innerHTML = originalText;
                addToCartBtn.classList.add('from-green-600', 'to-green-700', 'hover:from-green-700', 'hover:to-green-800');
                addToCartBtn.classList.remove('bg-green-600');
            }, 2000);

            // Reload the page once after 2.2 seconds
            setTimeout(() => {
                window.location.reload();
            }, 2200);

        } else {
            alert('Failed to add product to cart.');
        }
    } catch (error) {
        console.error('Error adding to cart:', error);
        alert('An error occurred while adding to cart.');
    }
}

        // Edit product functionality (for admins only)
        function editProduct() {
            if (!currentProduct) return;

            // Populate the edit form with current product data
            document.getElementById('editProductName').value = currentProduct.name || '';
            document.getElementById('editProductDescription').value = currentProduct.description || '';
            document.getElementById('editProductPrice').value = currentProduct.price || '';
            document.getElementById('editProductCategory').value = currentProduct.categoryId || '';
            document.getElementById('editProductActive').checked = currentProduct.isActive || false;

            // Show current image if available
            const currentImg = document.getElementById('currentImg');
            if (currentProduct.imageUrl) {
                currentImg.src = currentProduct.imageUrl;
                document.getElementById('currentImagePreview').style.display = 'block';
            } else {
                document.getElementById('currentImagePreview').style.display = 'none';
            }

            // Hide new image preview initially
            document.getElementById('newImagePreview').classList.add('hidden');

            // Show the modal
            document.getElementById('editProductModal').classList.remove('hidden');
            document.body.style.overflow = 'hidden'; // Prevent background scrolling
        }

        // Close edit modal
        function closeEditModal() {
            document.getElementById('editProductModal').classList.add('hidden');
            document.body.style.overflow = 'auto'; // Restore background scrolling
            resetEditForm();
        }

        // Reset edit form
        function resetEditForm() {
            if (currentProduct) {
                document.getElementById('editProductName').value = currentProduct.name || '';
                document.getElementById('editProductDescription').value = currentProduct.description || '';
                document.getElementById('editProductPrice').value = currentProduct.price || '';
                document.getElementById('editProductCategory').value = currentProduct.categoryId || '';
                document.getElementById('editProductActive').checked = currentProduct.isActive || false;
            }
            document.getElementById('editProductImage').value = '';
            document.getElementById('newImagePreview').classList.add('hidden');
        }

        // Show/hide edit success modal
        function showEditSuccessModal() {
            document.getElementById('editSuccessModal').classList.remove('hidden');
        }

        function hideEditSuccessModal() {
            document.getElementById('editSuccessModal').classList.add('hidden');
        }

        // Handle edit form submission - PUT API
        async function updateProduct(event) {
            event.preventDefault();

            const token = localStorage.getItem('token');
            const userRole = getUserRoleFromToken();

            if (!token || userRole !== 'Admin') {
                alert('You need admin privileges to edit products');
                return;
            }

            const updateBtn = document.getElementById('updateBtn');
            const originalText = updateBtn.innerHTML;

            // Show loading state
            updateBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Updating Product...';
            updateBtn.disabled = true;

            try {
                const formData = new FormData();
                formData.append('Name', document.getElementById('editProductName').value);
                formData.append('Description', document.getElementById('editProductDescription').value);
                formData.append('Price', document.getElementById('editProductPrice').value);
                formData.append('CategoryId', document.getElementById('editProductCategory').value);
                formData.append('IsActive', document.getElementById('editProductActive').checked);

                const imageFile = document.getElementById('editProductImage').files[0];
                if (imageFile) {
                    formData.append('ImageUrl', imageFile);
                }

                const response = await fetch(`${BASE_URL}/${currentProduct.id}`, {
                    method: 'PUT',
                    headers: {
                        ...getAuthHeaders()
                    },
                    body: formData
                });

                if (response.ok) {
                    const updatedProduct = await response.json();

                    // Update current product data
                    currentProduct = updatedProduct;

                    // Refresh the product details display
                    displayProductDetails(currentProduct);

                    // Close edit modal
                    closeEditModal();

                    // Show success message
                    showEditSuccessModal();
                } else {
                    const errorText = await response.text();
                    throw new Error(errorText || 'Failed to update product');
                }
            } catch (error) {
                console.error('Error updating product:', error);
                alert('Error updating product: ' + error.message);
            } finally {
                // Reset button state
                updateBtn.innerHTML = originalText;
                updateBtn.disabled = false;
            }
        }

        // Share product functionality
        function shareProduct() {
            if (!currentProduct) return;

            // Create share data
            const shareData = {
                title: currentProduct.name,
                text: `Check out this product: ${currentProduct.name}`,
                url: window.location.href
            };

            // Use Web Share API if available, otherwise fallback to clipboard
            if (navigator.share) {
                navigator.share(shareData).catch(console.error);
            } else {
                // Fallback to copying URL to clipboard
                navigator.clipboard.writeText(window.location.href).then(() => {
                    alert('Product link copied to clipboard!');
                }).catch(() => {
                    // Final fallback - show URL in alert
                    alert(`Share this product: ${window.location.href}`);
                });
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Load product details
            loadProductDetails();

            // Quantity controls (for regular users)
            document.getElementById('decreaseQty').addEventListener('click', () => {
                updateQuantity(quantity - 1);
            });

            document.getElementById('increaseQty').addEventListener('click', () => {
                updateQuantity(quantity + 1);
            });

            // Add to cart button (for regular users)
            document.getElementById('addToCartBtn').addEventListener('click', addToCart);

            // Edit product button (for admins)
            document.getElementById('editProductBtn').addEventListener('click', editProduct);

            // Share buttons
            document.getElementById('shareProductBtn').addEventListener('click', shareProduct);
            document.getElementById('adminShareProductBtn').addEventListener('click', shareProduct);

            // Edit modal controls
            document.getElementById('closeEditModal').addEventListener('click', closeEditModal);
            document.getElementById('cancelEditBtn').addEventListener('click', closeEditModal);

            // Edit form submission
            document.getElementById('editProductForm').addEventListener('submit', updateProduct);

            // New image preview functionality for edit modal
            document.getElementById('editProductImage').addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.getElementById('newPreviewImg').src = e.target.result;
                        document.getElementById('newImagePreview').classList.remove('hidden');
                    };
                    reader.readAsDataURL(file);
                } else {
                    document.getElementById('newImagePreview').classList.add('hidden');
                }
            });

            // Close modal when clicking outside
            document.getElementById('editProductModal').addEventListener('click', function(e) {
                if (e.target === this) {
                    closeEditModal();
                }
            });

            // Close modal on Escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && !document.getElementById('editProductModal').classList.contains('hidden')) {
                    closeEditModal();
                }
            });
        });
    </script>
</body>
</html>